/*
 * StockQuote
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Server.Attributes;
using Server.Security;
using Microsoft.AspNetCore.Authorization;
using Server.Models;

namespace Server.Controllers {
	/// <summary>
	/// 
	/// </summary>
	[ApiController]
	public class ConfigApiController : ControllerBase {
		/// <summary>
		/// 
		/// </summary>
		/// <remarks>Create or replace the configuration of a token</remarks>
		/// <param name="body">Configuration data</param>
		/// <response code="201">Configuration has been saved</response>
		/// <response code="400">Invalid parameters or payload</response>
		/// <response code="401">Unauthorized</response>
		/// <response code="500">Unknown error on server</response>
		[HttpPut]
		[Route("/truemogician/StockQuote/0.1/api/config")]
		[Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
		[ValidateModelState]
		[SwaggerOperation("CreateConfig")]
		public virtual IActionResult CreateConfig([FromBody] Body body) {
			
			//TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(201);

			//TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(400);

			//TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(401);

			//TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(500);

			throw new NotImplementedException();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <remarks>Get the configuration of given token or default one if token not provided</remarks>
		/// <param name="tokenId"></param>
		/// <response code="200">Configuration returned successfully</response>
		/// <response code="400">Invalid parameters or payload</response>
		/// <response code="500">Unknown error on server</response>
		[HttpGet]
		[Route("/truemogician/StockQuote/0.1/api/config")]
		[ValidateModelState]
		[SwaggerOperation("GetConfig")]
		[SwaggerResponse(200, type: typeof(Configuration), description: "Configuration returned successfully")]
		public virtual IActionResult GetConfig([FromQuery] string tokenId) {
			//TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(200, default(Configuration));

			//TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(400);

			//TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(500);
			string exampleJson = null;
			exampleJson = "{\n  \"refreshInterval\" : {\n    \"single\" : 6,\n    \"list\" : 0\n  },\n  \"pinnedStocks\" : [ \"pinnedStocks\", \"pinnedStocks\" ]\n}";

			var example = exampleJson != null
			? JsonConvert.DeserializeObject<Configuration>(exampleJson)
			: default(Configuration);            //TODO: Change the data returned
			return new ObjectResult(example);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <remarks>Modify part of the configuration of a token</remarks>
		/// <param name="body">Part of the configuration that needs updating</param>
		/// <response code="200">Configuration has been updated</response>
		/// <response code="400">Invalid parameters or payload</response>
		/// <response code="401">Unauthorized</response>
		/// <response code="500">Unknown error on server</response>
		[HttpPatch]
		[Route("/truemogician/StockQuote/0.1/api/config")]
		[Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
		[ValidateModelState]
		[SwaggerOperation("ModifyConfig")]
		public virtual IActionResult ModifyConfig([FromBody] Configuration body) {
			//TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(200);

			//TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(400);

			//TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(401);

			//TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(500);

			throw new NotImplementedException();
		}
	}
}
