/*
 * StockQuote
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Server.Attributes;
using Server.Security;
using Microsoft.AspNetCore.Authorization;
using Server.Models;

namespace Server.Controllers {
	/// <summary>
	/// 
	/// </summary>
	[ApiController]
	public class StockApiController : ControllerBase {
		/// <summary>
		/// 
		/// </summary>
		/// <remarks>Get the price summary of a stock</remarks>
		/// <param name="id">Stock id</param>
		/// <param name="startDate">Start date of the requested price summary, default 30 days ago</param>
		/// <param name="endDate">End date of the requested price summary, default today</param>
		/// <response code="200">Price summary returned successfully</response>
		/// <response code="400">Invalid parameters or payload</response>
		/// <response code="500">Unknown error on server</response>
		[HttpGet]
		[Route("/truemogician/StockQuote/0.1/api/stock/price_summary")]
		[ValidateModelState]
		[SwaggerOperation("GetPriceSummary")]
		[SwaggerResponse(statusCode: 200, type: typeof(List<PriceSummary>), description: "Price summary returned successfully")]
		public virtual IActionResult GetPriceSummary([FromQuery][Required()] string id, [FromQuery] DateTime? startDate, [FromQuery] DateTime? endDate) {
			//TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(200, default(List<PriceSummary>));

			//TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(400);

			//TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(500);
			string exampleJson = null;
			exampleJson = "[ {\n  \"date\" : \"2000-01-23\",\n  \"closing\" : 6,\n  \"highest\" : 1,\n  \"average5\" : 5,\n  \"opening\" : 0,\n  \"lowest\" : 5\n}, {\n  \"date\" : \"2000-01-23\",\n  \"closing\" : 6,\n  \"highest\" : 1,\n  \"average5\" : 5,\n  \"opening\" : 0,\n  \"lowest\" : 5\n} ]";

			var example = exampleJson != null
			? JsonConvert.DeserializeObject<List<PriceSummary>>(exampleJson)
			: default(List<PriceSummary>);            //TODO: Change the data returned
			return new ObjectResult(example);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <remarks>Get the entire list of all stocks</remarks>
		/// <response code="200">List returned successfully</response>
		/// <response code="500">Unknown error on server</response>
		[HttpGet]
		[Route("/truemogician/StockQuote/0.1/api/stock/list")]
		[ValidateModelState]
		[SwaggerOperation("GetStockList")]
		[SwaggerResponse(statusCode: 200, type: typeof(List<StockBasicInfo>), description: "List returned successfully")]
		public virtual IActionResult GetStockList() {
			//TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(200, default(List<StockBasicInfo>));

			//TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
			// return StatusCode(500);
			string exampleJson = null;
			exampleJson = "[ {\n  \"name\" : \"name\",\n  \"id\" : \"id\"\n}, {\n  \"name\" : \"name\",\n  \"id\" : \"id\"\n} ]";

			var example = exampleJson != null
			? JsonConvert.DeserializeObject<List<StockBasicInfo>>(exampleJson)
			: default(List<StockBasicInfo>);            //TODO: Change the data returned
			return new ObjectResult(example);
		}
	}
}
