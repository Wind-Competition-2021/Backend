/*
 * StockQuotes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Server.Attributes;
using Server.Models;
using Swashbuckle.AspNetCore.Annotations;

namespace Server.Controllers {
	/// <summary>
	/// </summary>
	[ApiController]
	public class StockApiController : ControllerBase {
		/// <summary>
		/// </summary>
		/// <param name="fetcher"></param>
		public StockApiController(Process fetcher) => Fetcher = fetcher;

		/// <summary>
		/// </summary>
		public Process Fetcher { get; }

		/// <summary>
		/// </summary>
		/// <remarks>Get the information of a stock</remarks>
		/// <param name="id"></param>
		/// <response code="200">Information returned successfully</response>
		/// <response code="404">Resource not found</response>
		[HttpGet("/api/stock/info")]
		[ValidateModelState]
		[SwaggerOperation("GetStockInfo")]
		[SwaggerResponse(200, type: typeof(StockInfo), description: "Information returned successfully")]
		public virtual IActionResult GetStockInfo(
			[FromQuery] [Required] [RegularExpression(@"[a-zA-Z]{2}\.\d{6}")]
			string id
		) {
			StockInfo result;
			lock (Fetcher) {
				var parts = id.Split('.');
				Fetcher.StandardInput.WriteLine($"getStockInfo {parts[1]}.{parts[0]}");
				var raw = Fetcher.StandardOutput.ReadLine();
				result = JsonConvert.DeserializeObject<StockInfo>(raw);
			}
			return Ok(result);
		}

		/// <summary>
		/// </summary>
		/// <remarks>Get the list of stocks</remarks>
		/// <param name="type"></param>
		/// <param name="date">Only meaningful when querying constituent stock list. Default value is today</param>
		/// <response code="200">List returned successfully</response>
		/// <response code="500">Unknown error on server</response>
		[HttpGet("/api/stock/list")]
		[ValidateModelState]
		[SwaggerOperation("GetStockList")]
		[SwaggerResponse(200, type: typeof(List<StockBasicInfo>), description: "List returned successfully")]
		public virtual IActionResult GetStockList([FromQuery] string type, [FromQuery] DateTime? date) {
			StockBasicInfo[] result;
			lock (Fetcher) {
				Fetcher.StandardInput.WriteLine($"getStockList {type ?? "default"} {date ?? DateTime.Now:yyyy-MM-dd}");
				var raw = Fetcher.StandardOutput.ReadLine();
				result = JsonConvert.DeserializeObject<StockBasicInfo[]>(raw);
			}
			return Ok(result);
		}
	}
}