{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "StockQuote",
    "version" : "0.1"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/truemogician/StockQuote/0.1",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "Token"
  }, {
    "name" : "Config"
  }, {
    "name" : "Stock"
  } ],
  "paths" : {
    "/api/token" : {
      "get" : {
        "tags" : [ "Token" ],
        "description" : "Get a new token",
        "operationId" : "GetToken",
        "responses" : {
          "201" : {
            "description" : "The new token has been created and returned",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "description" : "The new tokenId",
                  "x-content-type" : "text/plain"
                }
              }
            }
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        }
      }
    },
    "/api/token/validation" : {
      "get" : {
        "tags" : [ "Token" ],
        "description" : "Validate tokenId",
        "operationId" : "ValidateToken",
        "parameters" : [ {
          "name" : "tokenId",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Validation completed",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "boolean",
                  "description" : "Whether the token is valid",
                  "x-content-type" : "text/plain"
                }
              }
            }
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        }
      }
    },
    "/api/config" : {
      "get" : {
        "tags" : [ "Config" ],
        "description" : "Get the configuration of given token or default one if token not provided",
        "operationId" : "GetConfig",
        "parameters" : [ {
          "name" : "tokenId",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Configuration returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Configuration"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters or payload"
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        }
      },
      "put" : {
        "tags" : [ "Config" ],
        "description" : "Create or replace the configuration of a token",
        "operationId" : "CreateConfig",
        "requestBody" : {
          "description" : "Configuration data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Configuration has been saved"
          },
          "400" : {
            "description" : "Invalid parameters or payload"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        },
        "security" : [ {
          "token" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Config" ],
        "description" : "Modify part of the configuration of a token",
        "operationId" : "ModifyConfig",
        "requestBody" : {
          "description" : "Part of the configuration that needs updating",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Configuration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Configuration has been updated"
          },
          "400" : {
            "description" : "Invalid parameters or payload"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        },
        "security" : [ {
          "token" : [ ]
        } ]
      }
    },
    "/api/stock/price_summary" : {
      "get" : {
        "tags" : [ "Stock" ],
        "description" : "Get the price summary of a stock",
        "operationId" : "GetPriceSummary",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Stock id",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date of the requested price summary, default 30 days ago",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date of the requested price summary, default today",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Price summary returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PriceSummary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters or payload"
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        }
      }
    },
    "/api/stock/list" : {
      "get" : {
        "tags" : [ "Stock" ],
        "description" : "Get the entire list of all stocks",
        "operationId" : "GetStockList",
        "responses" : {
          "200" : {
            "description" : "List returned successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StockBasicInfo"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "500" : {
            "description" : "Unknown error on server"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Configuration" : {
        "type" : "object",
        "properties" : {
          "pinnedStocks" : {
            "type" : "array",
            "items" : {
              "pattern" : "\\d{6}\\.[a-zA-Z]{2}",
              "type" : "string"
            }
          },
          "refreshInterval" : {
            "$ref" : "#/components/schemas/Configuration_refreshInterval"
          }
        },
        "example" : {
          "refreshInterval" : {
            "single" : 6,
            "list" : 0
          },
          "pinnedStocks" : [ "pinnedStocks", "pinnedStocks" ]
        }
      },
      "StockBasicInfo" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "example" : {
          "name" : "name",
          "id" : "id"
        }
      },
      "PriceSummary" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "opening" : {
            "type" : "integer",
            "format" : "int32"
          },
          "closing" : {
            "type" : "integer",
            "format" : "int32"
          },
          "highest" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowest" : {
            "type" : "integer",
            "format" : "int32"
          },
          "average5" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Used in candlestick chart, prices are multiplied by 10000",
        "example" : {
          "date" : "2000-01-23",
          "closing" : 6,
          "highest" : 1,
          "average5" : 5,
          "opening" : 0,
          "lowest" : 5
        }
      },
      "body" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Configuration"
        }, {
          "required" : [ "pinnedStocks", "refreshInterval" ],
          "type" : "object"
        } ]
      },
      "Configuration_refreshInterval" : {
        "type" : "object",
        "properties" : {
          "list" : {
            "type" : "integer",
            "format" : "int32"
          },
          "single" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "example" : {
          "single" : 6,
          "list" : 0
        }
      }
    },
    "responses" : {
      "InvalidRequest" : {
        "description" : "Invalid parameters or payload"
      },
      "InternalError" : {
        "description" : "Unknown error on server"
      },
      "AuthorizationError" : {
        "description" : "Unauthorized"
      }
    },
    "securitySchemes" : {
      "token" : {
        "type" : "apiKey",
        "name" : "x-auth-token",
        "in" : "header"
      }
    }
  }
}
